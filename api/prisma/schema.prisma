generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  username  String
  password  String
  avatar    String?
  posts     Post[]
  savePosts SavePost[]
  createdAt DateTime   @default(now())
}

model Post {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  price             Int
  images            String[]
  address           String
  city              String
  bedroom           Int
  bathroom          Int
  lat               String
  long              String
  type              Type
  property          Property
  // offer             Boolean?
  propertyCondition String?
  parking           String?
  user              User        @relation(fields: [userId], references: [id])
  userId            String      @db.ObjectId
  postDetail        PostDetail?
  savePosts         SavePost[]
  createdAt         DateTime    @default(now())
  views             Int         @default(0)
  visitedByUsers    String[]    @default([]) // Track unique users (user IDs or IPs)
}

enum Type {
  buy
  rent
  commercial
  plots
  pg
}

enum Property {
  apartment
  Apartment //unnessary but i aaded becuse frofile post cna not fetch need to work on that .
  house
  condo
  land
  shop
}

model PostDetail {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  desc       String
  utilities  String?
  pet        String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?
  post       Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     String  @unique @db.ObjectId
}

model SavePost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId    String   @db.ObjectId
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}
